<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>   
<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro
namespace>${className}.</#macro>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${basepackage}.dao.${className}Dao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insert${className}">
	    <![CDATA[
	        INSERT INTO ${table.sqlName} ( 
	        	<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	        ) VALUES (
	        <#list table.columns as column>
	        	<@mapperEl column.columnNameFirstLower/> <#if column_has_next>,</#if>
	        </#list>        
	        )
	    ]]>
	</insert>

	<!-- 批量保存 -->
	<insert id="insert${className}Batch">
	    <![CDATA[
	        INSERT INTO ${table.sqlName} (
	        	<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	        ) VALUES 
	         ]]>
		<foreach item="item" collection="list" separator=",">
			(
				<#list table.columns as column>
					<#if column.isDateTimeColumn>
						<@mapperEl "item." + column.columnNameFirstLower/> <#if column_has_next>,</#if>
					</#if>
					<#if column.isNumberColumn>
						<@mapperEl "item." + column.columnNameFirstLower/> <#if column_has_next>,</#if>
					</#if>
					<#if column.isStringColumn>
						<@mapperEl "item." + column.columnNameFirstLower/> <#if column_has_next>,</#if>
					</#if>
				</#list>
			)
		</foreach>

	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<#list table.notPkColumns as column>
			<#if column.isDateTimeColumn>
			<if test="${column.columnNameFirstLower} != null">
				${column.sqlName} = <@mapperEl
				column.columnNameFirstLower/> <#if column_has_next>,</#if>
			</if>
			</#if>
			<#if column.isNumberColumn>
			<if test="${column.columnNameFirstLower} != null">
				${column.sqlName} = <@mapperEl
				column.columnNameFirstLower/> <#if column_has_next>,</#if>
			</if>
			</#if>
			<#if column.isStringColumn>
			<if
				test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} != ''">
				${column.sqlName} = <@mapperEl column.columnNameFirstLower/>
				<#if column_has_next>,</#if>
			</if>
			</#if>
			</#list>
		</set>
	</sql>

    ${r"<!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->"}
	<!-- where 条件组合 -->
	<sql id="where_sql">
		<where>
			<#list table.notPkColumns as column>
			<#if column.isDateTimeColumn>
			<if test="${className?uncap_first}.${column.columnNameFirstLower} != null">
				<#if column_index!=0> and </#if>${column.sqlName} = <@mapperEl className?uncap_first+'.'+column.columnNameFirstLower/> 
			</if>
			</#if>
			<#if column.isNumberColumn>
			<if test="${className?uncap_first}.${column.columnNameFirstLower} != null">
				<#if column_index!=0> and </#if> ${column.sqlName} = <@mapperEl className?uncap_first+'.'+column.columnNameFirstLower/> 
			</if>
			</#if>
			<#if column.isStringColumn>  
			<if
				test="${className?uncap_first}.${column.columnNameFirstLower} != null and ${className?uncap_first}.${column.columnNameFirstLower} != ''">
				<#if column_index!=0> and </#if>${column.sqlName} = <@mapperEl className?uncap_first+'.'+column.columnNameFirstLower/>				 
			</if>
			</#if>
			</#list>
		</where>
	</sql>

	<!-- 修改 -->
	<update id="update${className}ById">
		UPDATE ${table.sqlName}
		<include refid="update_sql" />
		WHERE
		<#list table.compositeIdColumns as column>
		${column.sqlName} =
		<@mapperEl column.columnNameLower/> <#if column_has_next> AND
		</#if>
		</#list>
	</update>

	<!-- 根据ID删除 -->
	<delete id="delete${className}ById">
		DELETE FROM ${table.sqlName}
		WHERE
		<#list table.compositeIdColumns as column>
		${column.sqlName} = <@mapperEl
		column.columnNameLower/> <#if column_has_next> AND
		</#if>
		</#list>
	</delete>



	<!-- selsect -->
	<select id="get${className}ById" resultType="${basepackage}.model.${className}">
		SELECT
		<include refid="columns" />
		FROM ${table.sqlName}
		WHERE
		<#list table.compositeIdColumns as column>
		${column.sqlName} = <@mapperEl
		column.columnNameLower/> <#if column_has_next> AND
		</#if>
		</#list>
	</select>

	<!-- selsect -->
	<select id="get${className}s" resultType="${basepackage}.model.${className}">
		SELECT
		<include refid="columns" />
		FROM ${table.sqlName}
		<include refid="where_sql" />
	</select>
	
			<!-- selsect -->
	<select id="get${className}sForPage" resultType="${basepackage}.model.${className}">
		SELECT
		<include refid="columns" />
		FROM ${table.sqlName}
		<include refid="where_sql" />
	</select>

	<select id="get${className}sByConditions" resultType="${basepackage}.model.${className}">
		SELECT
		<include refid="columns" />
		FROM ${table.sqlName}
		WHERE 
			1 =1
		<foreach collection="conditions" item="condition">
			{condition.exp}
		</foreach>
	</select>

</mapper>
	 